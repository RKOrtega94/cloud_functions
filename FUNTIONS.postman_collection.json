{
	"info": {
		"_postman_id": "1935fd57-515e-47f7-869c-1cbc96e57259",
		"name": "FUNTIONS",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "7819158"
	},
	"item": [
		{
			"name": "USERS",
			"item": [
				{
					"name": "GET USER",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"id not null\", function () {\r",
									"    var responseData = pm.response.json();\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data.id).to.not.be.null;\r",
									"});\r",
									"\r",
									"var responseData = pm.response.json();\r",
									"pm.variables.set('CURRENT_USER', responseData.data.id)\r",
									"\r",
									"pm.test(\"Response status code is 200\", function () {\r",
									"    pm.expect(pm.response.code).to.equal(200);\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Response has the required fields - status, message, and data\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.status).to.exist;\r",
									"    pm.expect(responseData.message).to.exist;\r",
									"    pm.expect(responseData.data).to.exist;\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"ID is a non-empty string\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data.id).to.be.a('string').and.to.have.lengthOf.at.least(1, \"ID should not be empty\");\r",
									"});\r",
									"\r",
									"\r",
									"pm.test(\"Email is in a valid email format\", function () {\r",
									"    const responseData = pm.response.json();\r",
									"\r",
									"    pm.expect(responseData).to.be.an('object');\r",
									"    pm.expect(responseData.data.email).to.match(/^[\\w-]+(\\.[\\w-]+)*@[\\w-]+(\\.[\\w-]+)+$/, \"Email is not in a valid format\");\r",
									"});\r",
									"\r",
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript",
								"packages": {}
							}
						}
					],
					"protocolProfileBehavior": {
						"disableBodyPruning": true
					},
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Accept",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/users/test@email.com",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users",
								"test@email.com"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE USER",
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"email\": \"test@email.com\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/users",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"users"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "TASKS",
			"item": [
				{
					"name": "GET TASKS",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "user_id",
								"value": "PWKyxQW1eunCnYoI17j5",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/tasks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET TASK BY ID",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "user_id",
								"value": "Vf6GrMiSZxaRHMNjdCNC",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{BASE_URL}}/tasks/2y1tqlmE1XekONxZbG03",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tasks",
								"2y1tqlmE1XekONxZbG03"
							]
						}
					},
					"response": []
				},
				{
					"name": "CREATE TASK",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "user_id",
								"value": "Fe4N7RFtitKS1AO6LPTy",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"TEST 123\",\r\n    \"description\": \"test\",\r\n    \"status\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tasks",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tasks"
							]
						}
					},
					"response": []
				},
				{
					"name": "UPDATE TASK",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "user_id",
								"value": "Q6Pu7AAWY89hdOWxu6fG",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"title\": \"TEST\",\r\n    \"description\": \"test\",\r\n    \"status\": \"completed\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tasks/KnJytvRLmfb325nZKCKT",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tasks",
								"KnJytvRLmfb325nZKCKT"
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE TASK",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "user_id",
								"value": "Vf6GrMiSZxaRHMNjdCNC",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{BASE_URL}}/tasks/2y1tqlmE1XekONxZbG03",
							"host": [
								"{{BASE_URL}}"
							],
							"path": [
								"tasks",
								"2y1tqlmE1XekONxZbG03"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}